//------------------------------------------------
//--- 010 Editor v14.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
// Couldn't find offical
typedef enum <uint> {
  //NONE           = 0x00000000, 
    A8             = 0x00000001, 
  //               = 0x00000002, 
  //               = 0x00000003, 
  //               = 0x00000004, 
  //               = 0x00000005, 
  //               = 0x00000006, 
    R16            = 0x00000007, 
  //               = 0x00000008, 
  //               = 0x00000009, 
  //               = 0x0000000A, 
  //               = 0x0000000B, 
  //               = 0x0000000C, 
    R16_HALF_FLOAT = 0x0000000D, 
    G8R8           = 0x0000000E, 
  //               = 0x0000000F, 
  //               = 0x00000010, 
  //               = 0x00000011, 
    RG8UI          = 0x00000012, 
  //               = 0x00000013, 
  //               = 0x00000014,
  //               = 0x00000015,  
    R32F           = 0x00000016, 
    R16G16         = 0x00000017, 
  //               = 0x00000018, 
  //               = 0x00000019,
  //               = 0x0000001A,  
  //               = 0x0000001B, 
  //               = 0x0000001C, 
    RG16F          = 0x0000001D, 
  //               = 0x0000001F, 
  //               = 0x00000020, 
  //               = 0x00000021, 
  //               = 0x00000022, 
  //               = 0x00000023, 
    R11F_G11F_B10F = 0x00000024, 
  //               = 0x00000025, 
  //               = 0x00000026, 
  //               = 0x00000027, 
  //               = 0x00000028, 
  //               = 0x00000029, 
  //               = 0x00000030, 
  //               = 0x00000031, 
    R10G10B10A2    = 0x00000032, 
  //               = 0x00000033, 
  //               = 0x00000034, 
  //               = 0x00000035, 
  //               = 0x00000036, 
  //               = 0x00000037, 
    R8G8B8A8       = 0x00000038,
  //               = 0x00000039,  
  //               = 0x0000003A, 
  //               = 0x0000003B, 
    RGBA8UI        = 0x0000003C, 
  //               = 0x0000003D, 
  //               = 0x0000003E, 
  //               = 0x0000003F, 
    R32G32_FLOAT   = 0x00000040, // 64
    R16G16B16A16   = 0x00000041, // 65
  //               = 0x00000042, 
  //               = 0x00000043, 
  //               = 0x00000044, 
  //               = 0x00000045, 
  //               = 0x00000046,
    R16F           = 0x00000047, 
  //               = 0x00000048, 
  //               = 0x00000049,
  //               = 0x0000004A,
  //               = 0x0000004B,   
  //               = 0x0000004C, 
    RGBA32F        = 0x0000004D, // 77
    
    A8_SIGNED      = 0x00000080, // 128
    R8G8           = 0x00000081, // 129
    A8B8G8R8       = 0x00000082, // 130
    A2B10G10R10    = 0x00000083, // 131
  //               = 0x00000084, // 132
    B5G6R5         = 0x00000085, // 133
    B5G5R5A1       = 0x00000086, // 134
  //               = 0x00000087, // 135
    ARGB           = 0x00000088, // 136
    A4L4           = 0x00000089, // 137
    
    DXT1           = 0x000000A9, // 169
    DXT1_SRGB      = 0x000000AA, // 170
    DXT3           = 0x000000AB, // 171
    DXT3_SRGB      = 0x000000AC, // 172
    DXT5           = 0x000000AD, // 173
    DXT5_SRGB      = 0x000000AE, // 174
    BC4            = 0x000000AF, // 175
    
    BC5            = 0x000000B1, // 177
    BC5_SRGB       = 0x000000B2, // 178
    BC6H           = 0x000000B3, // 179
    BC6H_SRGB      = 0x000000B4, // 180
    BC7            = 0x000000B5, // 181
    BC7_SRGB       = 0x000000B6, // 182
} SceGxmTextureFormat;

typedef struct (int i){
    local int i<hidden=true> = i;
    SceGxmTextureFormat data;
    SceGxmTextureFormat data_alt;
    local int test1 = 0;
    local int test2 = 0;
    local int test3 = 0;
} entry<read=Str("0x%02X",this.i)>;
local int i = 0;
local int count = FileSize() / 8;
LittleEndian();
for (i = 0; i < count; i++){
    if(ReadUInt() == 0)
    {
        FSkip(8);
    }
    else
    {
        entry data(i)<open=true>;
    }
};