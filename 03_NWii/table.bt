//------------------------------------------------
//--- 010 Editor v15.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef enum <uint>
{
    GX_TL_IA8     = 0x00,
    GX_TF_I8      = 0x01,
    GX_TF_IA4     = 0x02,
    GX_TF_IA8	  = 0x03,
    GX_TF_RGB565  = 0x04,
    GX_TF_RGB5A3  = 0x05,
    GX_TF_RGBA8   = 0x06,
    GX_TF_CI4     = 0x08,
    GX_TF_CI8     = 0x09,
    GX_TF_CI14    = 0x0A,
    BC1           = 0x0E,
    BC2           = 0x0F,
    BC3           = 0x10,
    GX_TF_Z8      = 0x11,
    GX_TF_Z16     = 0x13,
    GX_TF_Z24X8   = 0x16,
}ChannelFormat;

typedef struct (int i){
    local int i<hidden=true> = i;
    ChannelFormat full;
} entry<read=Str("0x%02X - 0x%02X",this.i, this.full)>;
local int i = 0;
local int count = FileSize() / 4;
BigEndian();
for (i = 0; i < count; i++){
    if(ReadInt() == -1){
        FSkip(4);
    } else {
        entry data(i)<open=true>;
    }
};