//------------------------------------------------
//--- 010 Editor v15.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

// https://github.com/devkitPro/wut/blob/master/include/gx2/enum.h

typedef enum <ushort>
{
   TC_R8_UNORM                  = 0x01,
   TC_R8_UINT                   = 0x101,
   TC_R8_SNORM                  = 0x201,
   TC_R8_SINT                   = 0x301,
   T_R4_G4_UNORM                = 0x02,
   TCD_R16_UNORM                = 0x05,
   TC_R16_UINT                  = 0x105,
   TC_R16_SNORM                 = 0x205,
   TC_R16_SINT                  = 0x305,
   TC_R16_FLOAT                 = 0x806,
   TC_R8_G8_UNORM               = 0x07,
   TC_R8_G8_UINT                = 0x107,
   TC_R8_G8_SNORM               = 0x207,
   TC_R8_G8_SINT                = 0x307,
   TCS_R5_G6_B5_UNORM           = 0x08,
   TC_R5_G5_B5_A1_UNORM         = 0x0a,
   TC_R4_G4_B4_A4_UNORM         = 0x0b,
   TC_A1_B5_G5_R5_UNORM         = 0x0c,
   TC_R32_UINT                  = 0x10d,
   TC_R32_SINT                  = 0x30d,
   TCD_R32_FLOAT                = 0x80e,
   TC_R16_G16_UNORM             = 0x0f,
   TC_R16_G16_UINT              = 0x10f,
   TC_R16_G16_SNORM             = 0x20f,
   TC_R16_G16_SINT              = 0x30f,
   TC_R16_G16_FLOAT             = 0x810,
   D_D24_S8_UNORM               = 0x11,
   T_R24_UNORM_X8               = 0x11,
   T_X24_G8_UINT                = 0x111,
   D_D24_S8_FLOAT               = 0x811,
   TC_R11_G11_B10_FLOAT         = 0x816,
   TCS_R10_G10_B10_A2_UNORM     = 0x19,
   TC_R10_G10_B10_A2_UINT       = 0x119,
   T_R10_G10_B10_A2_SNORM       = 0x219,
   TC_R10_G10_B10_A2_SNORM      = 0x219,
   TC_R10_G10_B10_A2_SINT       = 0x319,
   TCS_R8_G8_B8_A8_UNORM        = 0x1a,
   TC_R8_G8_B8_A8_UINT          = 0x11a,
   TC_R8_G8_B8_A8_SNORM         = 0x21a,
   TC_R8_G8_B8_A8_SINT          = 0x31a,
   TCS_R8_G8_B8_A8_SRGB         = 0x41a,
   TCS_A2_B10_G10_R10_UNORM     = 0x1b,
   TC_A2_B10_G10_R10_UINT       = 0x11b,
   T_X32_G8_UINT_X24            = 0x11c,
   D_D32_FLOAT_S8_UINT_X24      = 0x81c,
   T_R32_FLOAT_X8_X24           = 0x81c,
   TC_R32_G32_UINT              = 0x11d,
   TC_R32_G32_SINT              = 0x31d,
   TC_R32_G32_FLOAT             = 0x81e,
   TC_R16_G16_B16_A16_UNORM     = 0x1f,
   TC_R16_G16_B16_A16_UINT      = 0x11f,
   TC_R16_G16_B16_A16_SNORM     = 0x21f,
   TC_R16_G16_B16_A16_SINT      = 0x31f,
   TC_R16_G16_B16_A16_FLOAT     = 0x820,
   TC_R32_G32_B32_A32_UINT      = 0x122,
   TC_R32_G32_B32_A32_SINT      = 0x322,
   TC_R32_G32_B32_A32_FLOAT     = 0x823,
   T_BC1_UNORM                  = 0x31,
   T_BC1_SRGB                   = 0x431,
   T_BC2_UNORM                  = 0x32,
   T_BC2_SRGB                   = 0x432,
   T_BC3_UNORM                  = 0x33,
   T_BC3_SRGB                   = 0x433,
   T_BC4_UNORM                  = 0x34,
   T_BC4_SNORM                  = 0x234,
   T_BC5_UNORM                  = 0x35,
   T_BC5_SNORM                  = 0x235,
   T_NV12_UNORM                 = 0x81,   
} GX2SurfaceFormat;

typedef enum <ubyte>
{
   GX2_BLEND_MODE_ZERO                    = 0x00,
   GX2_BLEND_MODE_ONE                     = 0x01,
   GX2_BLEND_MODE_SRC_COLOR               = 0x02,
   GX2_BLEND_MODE_INV_SRC_COLOR           = 0x03,
   GX2_BLEND_MODE_SRC_ALPHA               = 0x04,
   GX2_BLEND_MODE_INV_SRC_ALPHA           = 0x05,
   GX2_BLEND_MODE_DST_ALPHA               = 0x06,
   GX2_BLEND_MODE_INV_DST_ALPHA           = 0x07,
   GX2_BLEND_MODE_DST_COLOR               = 0x08,
   GX2_BLEND_MODE_INV_DST_COLOR           = 0x09,
   GX2_BLEND_MODE_SRC_ALPHA_SAT           = 0x0A,
   GX2_BLEND_MODE_BOTH_SRC_ALPHA          = 0x0B,
   GX2_BLEND_MODE_BOTH_INV_SRC_ALPHA      = 0x0C,
   GX2_BLEND_MODE_BLEND_FACTOR            = 0x0D,
   GX2_BLEND_MODE_INV_BLEND_FACTOR        = 0x0E,
   GX2_BLEND_MODE_SRC1_COLOR              = 0x0F,
   GX2_BLEND_MODE_INV_SRC1_COLOR          = 0x10,
   GX2_BLEND_MODE_SRC1_ALPHA              = 0x11,
   GX2_BLEND_MODE_INV_SRC1_ALPHA          = 0x12,
   GX2_BLEND_MODE_CONSTANT_ALPHA          = 0x13,
   GX2_BLEND_MODE_INV_CONSTANT_ALPHA      = 0x14,
} GX2BlendMode;
 
typedef enum <ubyte>
{
    CHANNELR = 0x00,
    CHANNELG = 0x01,
    CHANNELB = 0x02,
    CHANNELA = 0x03,
    ALWAYS0  = 0x04,
    ALWAYS1  = 0x05
} GX2CompSel;
  
typedef struct (int i){
    local int i2<hidden=true> = i;
    GX2SurfaceFormat SurfaceFormat<format=hex>;
    local string FormatText = Str("0x%X", SurfaceFormat);
    ubyte BPP<read=Str("0x%x", this)>;
    GX2BlendMode BlendMode<format=hex>;
    GX2CompSel Channel1<format=hex>;
    GX2CompSel Channel2<format=hex>;
    GX2CompSel Channel3<format=hex>;
    GX2CompSel Channel4<format=hex>;
}entry<read=Str("0x%02X",this.i2)>;
local int i = 0;
local int count = FileSize() / 8;
BigEndian();
for (i = 0; i < count; i++){
    if(((ReadUInt() >> 16) & 0xffff) == 0){
         FSkip(8);
    } else {
         entry data(i)<optimize=false, open=true>;
    }
};