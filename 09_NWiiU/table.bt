//------------------------------------------------
//--- 010 Editor v15.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

// https://github.com/devkitPro/wut/blob/master/include/gx2/enum.h

typedef enum <ushort>
{
  GX2_SURFACE_FORMAT_INVALID = 0x0,
  GX2_SURFACE_FORMAT_UNORM_R4_G4 = 0x2,
  GX2_SURFACE_FORMAT_UNORM_R4_G4_B4_A4 = 0xB,
  GX2_SURFACE_FORMAT_UNORM_R8 = 0x1,
  GX2_SURFACE_FORMAT_UNORM_R8_G8 = 0x7,
  GX2_SURFACE_FORMAT_UNORM_R8_G8_B8_A8 = 0x1A,
  GX2_SURFACE_FORMAT_UNORM_R16 = 0x5,
  GX2_SURFACE_FORMAT_UNORM_R16_G16 = 0xF,
  GX2_SURFACE_FORMAT_UNORM_R16_G16_B16_A16 = 0x1F,
  GX2_SURFACE_FORMAT_UNORM_R5_G6_B5 = 0x8,
  GX2_SURFACE_FORMAT_UNORM_R5_G5_B5_A1 = 0xA,
  GX2_SURFACE_FORMAT_UNORM_A1_B5_G5_R5 = 0xC,
  GX2_SURFACE_FORMAT_UNORM_R24_X8 = 0x11,
  GX2_SURFACE_FORMAT_UNORM_A2_B10_G10_R10 = 0x1B,
  GX2_SURFACE_FORMAT_UNORM_R10_G10_B10_A2 = 0x19,
  GX2_SURFACE_FORMAT_UNORM_BC1 = 0x31,
  GX2_SURFACE_FORMAT_UNORM_BC2 = 0x32,
  GX2_SURFACE_FORMAT_UNORM_BC3 = 0x33,
  GX2_SURFACE_FORMAT_UNORM_BC4 = 0x34,
  GX2_SURFACE_FORMAT_UNORM_BC5 = 0x35,
  GX2_SURFACE_FORMAT_UNORM_NV12 = 0x81,
  GX2_SURFACE_FORMAT_UINT_R8 = 0x101,
  GX2_SURFACE_FORMAT_UINT_R8_G8 = 0x107,
  GX2_SURFACE_FORMAT_UINT_R8_G8_B8_A8 = 0x11A,
  GX2_SURFACE_FORMAT_UINT_R16 = 0x105,
  GX2_SURFACE_FORMAT_UINT_R16_G16 = 0x10F,
  GX2_SURFACE_FORMAT_UINT_R16_G16_B16_A16 = 0x11F,
  GX2_SURFACE_FORMAT_UINT_R32 = 0x10D,
  GX2_SURFACE_FORMAT_UINT_R32_G32 = 0x11D,
  GX2_SURFACE_FORMAT_UINT_R32_G32_B32_A32 = 0x122,
  GX2_SURFACE_FORMAT_UINT_A2_B10_G10_R10 = 0x11B,
  GX2_SURFACE_FORMAT_UINT_R10_G10_B10_A2 = 0x119,
  GX2_SURFACE_FORMAT_UINT_X24_G8 = 0x111,
  GX2_SURFACE_FORMAT_UINT_G8_X24 = 0x11C,
  GX2_SURFACE_FORMAT_SNORM_R8 = 0x201,
  GX2_SURFACE_FORMAT_SNORM_R8_G8 = 0x207,
  GX2_SURFACE_FORMAT_SNORM_R8_G8_B8_A8 = 0x21A,
  GX2_SURFACE_FORMAT_SNORM_R16 = 0x205,
  GX2_SURFACE_FORMAT_SNORM_R16_G16 = 0x20F,
  GX2_SURFACE_FORMAT_SNORM_R16_G16_B16_A16 = 0x21F,
  GX2_SURFACE_FORMAT_SNORM_R10_G10_B10_A2 = 0x219,
  GX2_SURFACE_FORMAT_SNORM_BC4 = 0x234,
  GX2_SURFACE_FORMAT_SNORM_BC5 = 0x235,
  GX2_SURFACE_FORMAT_SINT_R8 = 0x301,
  GX2_SURFACE_FORMAT_SINT_R8_G8 = 0x307,
  GX2_SURFACE_FORMAT_SINT_R8_G8_B8_A8 = 0x31A,
  GX2_SURFACE_FORMAT_SINT_R16 = 0x305,
  GX2_SURFACE_FORMAT_SINT_R16_G16 = 0x30F,
  GX2_SURFACE_FORMAT_SINT_R16_G16_B16_A16 = 0x31F,
  GX2_SURFACE_FORMAT_SINT_R32 = 0x30D,
  GX2_SURFACE_FORMAT_SINT_R32_G32 = 0x31D,
  GX2_SURFACE_FORMAT_SINT_R32_G32_B32_A32 = 0x322,
  GX2_SURFACE_FORMAT_SINT_R10_G10_B10_A2 = 0x319,
  GX2_SURFACE_FORMAT_SRGB_R8_G8_B8_A8 = 0x41A,
  GX2_SURFACE_FORMAT_SRGB_BC1 = 0x431,
  GX2_SURFACE_FORMAT_SRGB_BC2 = 0x432,
  GX2_SURFACE_FORMAT_SRGB_BC3 = 0x433,
  GX2_SURFACE_FORMAT_FLOAT_R32 = 0x80E,
  GX2_SURFACE_FORMAT_FLOAT_R32_G32 = 0x81E,
  GX2_SURFACE_FORMAT_FLOAT_R32_G32_B32_A32 = 0x823,
  GX2_SURFACE_FORMAT_FLOAT_R16 = 0x806,
  GX2_SURFACE_FORMAT_FLOAT_R16_G16 = 0x810,
  GX2_SURFACE_FORMAT_FLOAT_R16_G16_B16_A16 = 0x820,
  GX2_SURFACE_FORMAT_FLOAT_R11_G11_B10 = 0x816,
  GX2_SURFACE_FORMAT_FLOAT_D24_S8 = 0x811,
  GX2_SURFACE_FORMAT_FLOAT_X8_X24 = 0x81C,
} GX2SurfaceFormat;

typedef enum <ubyte>
{
   GX2_BLEND_MODE_ZERO                    = 0x00,
   GX2_BLEND_MODE_ONE                     = 0x01,
   GX2_BLEND_MODE_SRC_COLOR               = 0x02,
   GX2_BLEND_MODE_INV_SRC_COLOR           = 0x03,
   GX2_BLEND_MODE_SRC_ALPHA               = 0x04,
   GX2_BLEND_MODE_INV_SRC_ALPHA           = 0x05,
   GX2_BLEND_MODE_DST_ALPHA               = 0x06,
   GX2_BLEND_MODE_INV_DST_ALPHA           = 0x07,
   GX2_BLEND_MODE_DST_COLOR               = 0x08,
   GX2_BLEND_MODE_INV_DST_COLOR           = 0x09,
   GX2_BLEND_MODE_SRC_ALPHA_SAT           = 0x0A,
   GX2_BLEND_MODE_BOTH_SRC_ALPHA          = 0x0B,
   GX2_BLEND_MODE_BOTH_INV_SRC_ALPHA      = 0x0C,
   GX2_BLEND_MODE_BLEND_FACTOR            = 0x0D,
   GX2_BLEND_MODE_INV_BLEND_FACTOR        = 0x0E,
   GX2_BLEND_MODE_SRC1_COLOR              = 0x0F,
   GX2_BLEND_MODE_INV_SRC1_COLOR          = 0x10,
   GX2_BLEND_MODE_SRC1_ALPHA              = 0x11,
   GX2_BLEND_MODE_INV_SRC1_ALPHA          = 0x12,
   GX2_BLEND_MODE_CONSTANT_ALPHA          = 0x13,
   GX2_BLEND_MODE_INV_CONSTANT_ALPHA      = 0x14,
} GX2BlendMode;
 
typedef enum <ubyte>
{
    CHANNELR = 0x00,
    CHANNELG = 0x01,
    CHANNELB = 0x02,
    CHANNELA = 0x03,
    ALWAYS0  = 0x04,
    ALWAYS1  = 0x05
} GX2CompSel;
  
typedef struct (int i){
    local int i2<hidden=true> = i;
    GX2SurfaceFormat SurfaceFormat<format=hex>;
    ubyte BPP;
    GX2BlendMode BlendMode<format=hex>;
    GX2CompSel Channel1<format=hex>;
    GX2CompSel Channel2<format=hex>;
    GX2CompSel Channel3<format=hex>;
    GX2CompSel Channel4<format=hex>;
}entry<read=Str("0x%02X",this.i2)>;
local int i = 0;
local int count = FileSize() / 8;
BigEndian();
for (i = 0; i < count; i++){
    if(((ReadUInt() >> 16) & 0xffff) == 0){
         FSkip(8);
    } else {
         entry data(i)<optimize=false>;
    }
};